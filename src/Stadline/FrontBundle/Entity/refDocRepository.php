<?php

namespace Stadline\FrontBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\EntityManager;
use SensioLabs\Security\Exception\RuntimeException;
use Stadline\FrontBundle\Entity\Contact;
use Symfony\Component\Security\Core\Exception\AuthenticationException;

/**
 * refDocRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class refDocRepository extends EntityRepository
{
// <editor-fold desc="cryptage area">
    private $round = 1000;
    public function encryptDoc($refDoc, $key, $allowCreate = false)
    {
        /** @var EntityManager $em */
        $em = $this->getEntityManager();
        /** @var refDoc $Doc */
        $Doc = $this->findOneBy(array('refDoc' => $refDoc));

        // si jai trouvÃ© mle client dans ma base
        if (!is_null($Doc)) {
            if ($Doc instanceof refDoc) {
                return $Doc->getRefDocEncrypt();
            }
        }

        if ($allowCreate === true) {
            $Doc = new refDoc();
            $Doc->setRefDoc($refDoc);

            $refDocEncrypt = substr(md5($refDoc.time().rand(0,10000)),0, 10);
            $Doc->setRefDocEncrypt($refDocEncrypt);

            $em->persist($Doc);
            $em->flush();
            return $Doc->getRefDocEncrypt();
        }
        return false;
    }


    public function decryptDoc($refDocEncrypt) // TODO: verif fonctionnement
    {
        /** @var refDoc $refDocEncrypt */
        $Doc = $this->findOneBy(array('refDocEncrypt' => $refDocEncrypt));

        if (is_null($Doc)) return false;
        if (!$Doc instanceof refDoc) return false;

        return $Doc->getrefDoc();
    }
}
